parameters:
  AksClusterName: 
  AksResourceGroupName: 
  AzureServiceConnection: 
  Environment: 
  HelmClientVersion: 
  HelmChartVersion: 
  KubectlVersion: 
  ResourceGroupLocation: 
  SubscriptionId: 
  TemplateSecrets: {}

jobs:
- deployment: DeployTo_${{ parameters.Environment }}
  environment: ${{ parameters.Environment }}
  pool:
    name: 'DAS - Continuous Integration'
    ## Windows Agent doesn't have Az module installed
    demands: Agent.OS -equals Linux
  variables:
  - name: KubernetesNamespace
    value: monitoring
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: self
          path: 'das-grafana/'
        - task: KubectlInstaller@0
          displayName: 'Install Kubectl $(KubectlVersion)'
          inputs:
            kubectlVersion: $(KubectlVersion)
        - task: HelmInstaller@1
          displayName: 'Install Helm $(HelmClientVersion)'
          inputs:
            helmVersionToInstall: $(HelmClientVersion)
        - task: HelmDeploy@0
          displayName: 'Check application-gateway-ingress deployed'
          inputs:
            azureSubscription: '${{ parameters.AzureServiceConnection }}'
            azureResourceGroup: '${{ parameters.AksResourceGroupName }}'
            kubernetesCluster: '${{ parameters.AksClusterName }}'
            useClusterAdmin: true
            command: get
            namespace: default
            arguments: 'all application-gateway-ingress'
        - template: azure-pipelines-templates/deploy/step/arm-deploy.yml@das-platform-building-blocks
          parameters:
            Location: ${{ parameters.ResourceGroupLocation }}
            ParametersPath: $(Pipeline.Workspace)/das-grafana/azure/template.parameters.json
            ServiceConnection: ${{ parameters.AzureServiceConnection }}
            SubscriptionId: ${{ parameters.SubscriptionId }}
            TemplatePath: $(Pipeline.Workspace)/das-grafana/azure/template.json
            IsMultiRepoCheckout: true
            TemplateSecrets: ${{ parameters.TemplateSecrets }}
        ##TO DO: remove this task
        - pwsh: Get-ChildItem ENV:* | Sort-Object Name | Format-Table -AutoSize
        ##TO DO: consider handling this with reusable script  and/or step template
        - task: AzurePowerShell@4
          displayName: 'Azure PowerShell: Set StorageAccountKey variable'
          inputs:
            azureSubscription: ${{ parameters.AzureServiceConnection }}
            scriptType: inlineScript
            inline: |
              $Keys = Get-AzStorageAccountKey -ResourceGroupName $(RESOURCEGROUPNAME) -Name $(STORAGEACCOUNTNAME)
              Write-Output "##vso[task.setvariable variable=StorageAccountKey;isOutput=false]$($Keys[0].Value)"
            azurePowerShellVersion: LatestVersion
        - task: replacetokens@3
          displayName: 'Replace tokens manifests and values files'
          inputs:
            rootDirectory: '$(Pipeline.Workspace)/das-grafana'
            targetFiles: 'manifest/*.yml, helm.yml'
            encoding: 'auto'
            writeBOM: true
            actionOnMissing: 'fail'
            keepToken: false
            tokenPrefix: '{{'
            tokenSuffix: '}}'
        - template: azure-pipelines-templates/deploy/step/create-kubernetes-namespace.yml@das-platform-building-blocks
          parameters:
            AksResourceGroupName: ${{ parameters.AksResourceGroup }}
            AzureSubscription: ${{ parameters.ServiceConnection }}
            AksClusterName: ${{ parameters.KubernetesCluster }}
            Namespace: $(KubernetesNamespace)